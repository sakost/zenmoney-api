# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
    tags:
      - v0.1.*
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          src:
            - 'src/**'
          tests:
            - 'tests/**'
    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
          version: "0.8.4"
          python-version: ${{ matrix.python-version }}
          enable-cache: true
    - name: Install the project
      run: uv sync --locked --all-extras --dev
    - name: Lint with mypy, pylint, ruff
      if: ${{ steps.changes.outputs.src == 'true' }}
      run: |
        uv run pre-commit run --files ${{ steps.changes.outputs.src }}
    - name: Test with pytest
      if: ${{ steps.changes.outputs.tests == 'true' }}
      run: |
        uv run pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
